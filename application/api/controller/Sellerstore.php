<?php

namespace app\api\controller;
/**
 * ============================================================================
 * DSMall多用户商城
 * ============================================================================
 * 版权所有 2014-2028 长沙德尚网络科技有限公司，并保留所有权利。
 * 网站地址: http://www.csdeshang.com
 * ----------------------------------------------------------------------------
 * 这不是一个自由软件！您只能在不用于商业目的的前提下对程序代码进行修改和使用 .
 * 不允许对程序代码以任何形式任何目的的再发布。
 * ============================================================================
 * 卖家店铺控制器
 */
class Sellerstore extends MobileSeller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * @api {POST} api/Sellerstore/store_info 获取店铺信息
     * @apiVersion 1.0.0
     * @apiGroup Sellerstore
     *
     * @apiHeader {String} X-DS-KEY 卖家授权token
     *
     * @apiSuccess {String} code 返回码,10000为成功
     * @apiSuccess {String} message  返回消息
     * @apiSuccess {Object} result  返回数据
     * @apiSuccess {Object} result.store_info  店铺信息 （返回字段参考store）
     */
    public function store_info()
    {
        $this->store_info['store_banner'] = get_store_logo($this->store_info['store_banner'], 'store_logo');
        ds_json_encode(10000, '',array('store_info' => $this->store_info));
    }

    /**
     * @api {POST} api/Sellerstore/store_edit 编辑店铺信息
     * @apiVersion 1.0.0
     * @apiGroup Sellerstore
     *
     * @apiHeader {String} X-DS-KEY 卖家授权token
     *
     * @apiParam {String} store_qq QQ
     * @apiParam {String} store_ww 旺旺
     * @apiParam {String} store_phone 手机
     * @apiParam {String} store_mainbusiness 主营商品
     * @apiParam {String} store_keywords SEO关键词
     * @apiParam {String} store_description SEO店铺描述
     * 
     * @apiSuccess {String} code 返回码,10000为成功
     * @apiSuccess {String} message  返回消息
     * @apiSuccess {Object} result  返回数据
     */
    public function store_edit()
    {
        /**
         * 上传店铺图片
         */
        $store_banner = '';
        if (!empty($_FILES['store_banner']['name'])) {
            $upload_file = BASE_UPLOAD_PATH .DS. ATTACH_STORE.DS;
            $file_object = request()->file('store_banner');
            $file_name = $this->store_info['store_id'] . '_' . date('YmdHis') . rand(10000, 99999);
            $info = $file_object->rule('uniqid')->validate(['ext' => ALLOW_IMG_EXT])->move($upload_file, $file_name);
            if ($info) {
                $store_banner = $info->getFilename();
            }
            else {
                ds_json_encode(10001,$file_object->getError());
            }
        }

        //删除旧店铺图片
        if (!empty($store_banner) && !empty($this->store_info['store_banner'])) {
            @unlink(BASE_UPLOAD_PATH . DS . ATTACH_STORE . DS . $this->store_info['store_banner']);
        }
        /**
         * 更新入库
         */
        $param = array(
            'store_qq' => input('post.store_qq'), 'store_ww' => input('post.store_ww'), 'store_phone' => input('post.store_phone'),
            'store_mainbusiness' => input('post.store_mainbusiness'), 'store_keywords' => input('post.seo_keywords'),
            'store_description' => input('post.seo_description')
        );
        if (!empty($store_banner)){
            $param['store_banner'] = $store_banner;
        }
        

        $result = model('store')->editStore($param, array('store_id' => $this->store_info['store_id']));
        if (!$result) {
            ds_json_encode(10001,lang('ds_common_op_fail'));
        }
        ds_json_encode(10000, lang('ds_common_op_succ'),1);
    }

    /**
     * 店铺信息统计
     */
    public function store_statistics()
    {
        $stat_model = model('stat');
        $start_time = strtotime(date('Y-m', time()));        // 当月开始
        // 月销量 月订单
        $condition = array();
        $condition['order_add_time'] = array('gt', $start_time);
        $monthly_sales = $stat_model->getoneByStatorder($condition, 'COUNT(*) as ordernum,SUM(order_amount) as orderamount ');

        // 月访问量
        //确定统计分表名称
        $last_num = $this->store_info['store_id'] % 10; //获取店铺ID的末位数字
        $tablenum = ($t = intval(config('flowstat_tablenum'))) > 1 ? $t : 1; //处理流量统计记录表数量
        $flow_tablename = ($t = ($last_num % $tablenum)) > 0 ? "flowstat_$t" : 'flowstat';
        $condition = array();
        $condition['store_id'] = $this->store_info['store_id'];
        
        if($flow_tablename=='flowstat'){
            $condition['flowstat_stattime'] = array('gt', $start_time);
            $condition['flowstat_type'] = 'sum';
        }else{
            $condition['flowstat_stattime'] = array('gt', $start_time);
            $condition['flowstat_type'] = 'sum';
        }
        $statlist_tmp = $stat_model->getoneByFlowstat($flow_tablename, $condition, 'SUM(flowstat_clicknum) as amount');

        $output = array(
            'store_name' => $this->store_info['store_name'],
            'store_banner' => get_store_logo($this->store_info['store_banner'], 'store_logo'),
            'order_amount' => $monthly_sales['orderamount'], 'order_num' => $monthly_sales['ordernum'],
            'click_amount' => $statlist_tmp['amount']
        );
        ds_json_encode(10000, '',array('statistics' => $output));
    }
}